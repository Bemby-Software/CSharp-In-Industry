# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  release:
    types: [published]

jobs:
  release:
          
    runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2

        - name: Set up .NET Core
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: '5.0.x'

        - name: Build  
          run: dotnet build Site/Site.sln -c Release

        - name: Register Recursive Test Searcher
          run: chmod +x Site/scripts/shell/test-dir.sh
        
        - name: Pull Sql Server Image
          run: docker pull mcr.microsoft.com/mssql/server:2019-latest

        - name: Run Unit Tests
          run: Site/scripts/shell/test-dir.sh Site/tests/units/

        - name: Run Integration Tests
          run: Site/scripts/shell/test-dir.sh Site/tests/intergration/
        
        - name: Run Acceptance Tests
          run: Site/scripts/shell/test-dir.sh Site/tests/acceptance/

        - name: Login to GitHub Packages Docker Registry
          uses: docker/login-action@v1
          with:
            registry: docker.pkg.github.com
            username: ${{ secrets.BILLY_USERNAME }}
            password: ${{ secrets.BILLY_ACCESS_TOKEN }}

        - name: Build artifact
          run: docker build -t docker.pkg.github.com/bemby-software/csharp-in-industry/competition-site Site/Site.Web/

        - name: Publish Package
          run: docker push docker.pkg.github.com/bemby-software/csharp-in-industry/competition-site
          
        - name: WebHook Request
          uses: potaesm/github-actions-request@1.0.6
          with:
            url: ${{ secrets.APP_SERVICE_WEB_HOOK }}
            method: post
          

          
    
